<!--
 Copyright 2025 Google Inc.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

  NOTE: This is not an officially supported Google product
-->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="https://cdn.glitch.global/3fefe35b-bbb3-4e52-b0f1-f94d09bc62e4/favicon.ico?v=1709751697719" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <title>Shared Storage WebAssembly Demo</title>

    <!-- import the webpage's stylesheet -->
    <link rel="stylesheet" href="/style.css" />
    <script src="/code-box"></script>
  </head>
  <body>
    
    <!-- this is the start of content -->
    <h1>Shared Storage WebAssembly Demo</h1>
    
    <h3>
      <div id="toc">
      Contents
      <ul> 
      </ul>
      </div>
    </h3>
    <button id="darkModeButton">toggle dark mode</button>
    <script src="/dark-mode"></script>
   <br>
    <hr class="custom-divider">
    <p>
      <h2 id="Overview">Overview</h2>
    </p>

    <p>
      <h3>
        This is a demo of the new <a href="https://github.com/WICG/shared-storage/blob/main/README.md">Shared Storage API</a>, where the worklet uses <a href="https://webassembly.org/">WebAssemby</a> (WASM).
      </h3>
    </p>

   <p>
     <h3>
       See the <a href="https://github.com/WICG/shared-storage/blob/main/README.md">Shared Storage explainer</a> for more general information on Shared Storage. 
    </h3>
  </p>

   <p>
     <h3>
       See the <a href="https://developer.mozilla.org/en-US/docs/WebAssembly">MDN docs on WebAssembly</a> for more information on WASM usage not specific to Shared Storage. 
    </h3>
  </p>

   <p>
      <h3>
        Currently, shared storage worklets support use of WebAssembly if the WASM bytes are passed in as an Uint8Array member of the `data` object in a worklet operation, of if they are hard-coded inside the worklet operation's definition. 
        Similarly, any accompanying JavaScript glue code needed to run the WASM is not currently able to be imported and so must either be written in the shared storage module or else passed in as a string member of the `data` object in a worklet operation, then evaluated inside the operation.
     </h3>
   </p>
    <hr class="custom-divider">
    <p>
      <h2 id="setup">Demo Setup Instructions</h2>
    </p>
    
    
    <p>
      <h3>
        Shared Storage is enabled by default in Chrome versions 120.0.6099.29+ (and slightly earlier in some platforms).
      </h3>
    </p>
  
    <p>
      <h3>
        You can check your Chrome version number at <br><code-box>chrome://version</code-box> 
      </h3> 
    </p>
  
    <p>
      <h3>
        If you are running an eligible version of Chrome on Desktop, you should be able to run shared storage worklets from this site by overriding Privacy Sandbox enrollment for this site:
            <ul>
              <li>
                Open a new tab and navigate to: 
                <br><code-box>chrome://flags/#privacy-sandbox-enrollment-overrides</code-box>
              </li>
              <li>
                Enter 
                <br><code-box>https://shared-storage-wasm-demo.glitch.me</code-box>
                <br>in the text input box below "Privacy Sandbox Enrollment Overrides"
              </li>
              <li>To the right, toggle the value for the flag to "Enabled"</li>
              <li>Click "Relaunch" in the bottom right corner<br>
            <img src="https://cdn.glitch.global/299277f2-19a3-45d8-8a11-ccbaff9d6682/flag-screenshot.png?v=1712009293179" alt="Screenshot of chrome://flags/#privacy-sandbox-enrollment-overrides"/></li>
          </ul>
      </h3>
     </p>
    
    <p>
      <h3>
        To see get a little better sense of what is happening, you may want to open DevTools by selecting the three dot menu &gt; More Tools &gt; Developer Tools, then select Console.
     </h3>
   </p>

          
  <hr class="custom-divider">
  <p>
    <h2 id="wasm">Create And Run A Shared Storage Worklet That Uses WebAssembly</h2>
  </p>

   <p>
      <h3>
        These are toy examples and not intended to be practical use cases.
     </h3>
   </p>

    <p>
      <h3>
        To see get a little better sense of what is happening when you run one of the worklets, you may want to first open DevTools by selecting the three dot menu &gt; More Tools &gt; Developer Tools, then selecting Console.
     </h3>
   </p>

   <p>
      <h3>
        To refresh the `sharedStorage.selectURL()` per-pageload budget (which will cause the default index to be returned if there is insufficient budget), reload the page.
     </h3>
   </p>

   <p>
      <h3>
        Click a <a href="#workletTypes">worklet type</a> button to run an example worklet that uses WebAssembly.
     </h3>
   </p>
  
    <p> 
    <h3>
      <fieldset id="#workletTypes">
        <legend>Worklet Example Type</legend>
        <button data-doc="/simple">console</button>
        <button data-doc="/add">add</button>
        <button data-doc="/parsedown">parse markdown</button>
      </fieldset>
    </h3>
    </p>

   <p>
     <iframe id="displayIframe"></iframe> 
   </p>

   <script>
     const buttons = document.querySelectorAll('button');
     const iframe = document.getElementById('displayIframe');
     let queryString = (localStorage.getItem('theme') === 'dark') ? '?theme=dark' : ''; 
     iframe.src = `/default-frame${queryString}`;
     
     buttons.forEach(button => {
       button.addEventListener('click', (event) => {
         queryString = (localStorage.getItem('theme') === 'dark') ? '?theme=dark' : ''; 
         if (!event.target.dataset.doc) {
           iframe.src = `/default-frame${queryString}`;
           return;
         }
         iframe.src = `${event.target.dataset.doc}${queryString}`; 
      });
    });
        
    // Table of Contents
    const h2Elements = document.querySelectorAll('h2');
    const tocList = document.querySelector('#toc ul');
    h2Elements.forEach(h2 => {
      const listItem = document.createElement('li');
      const anchor = document.createElement('a');
      anchor.href = `#${h2.id}`;
      anchor.textContent = h2.textContent;
      listItem.appendChild(anchor);
      tocList.appendChild(listItem);
    });
  </script>
  </body>
</html>
